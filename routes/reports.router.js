const express = require('express');
const router = express.Router();
const ReportController = require('../controllers/reports.controller');

/**
 * @api {get} /v1/reports Get reports
 * @apiName GetReports
 * @apiGroup Reports
 * @apiVersion 1.1.0
 * @apiDescription Retrieves a list of reports. You can query this endpoint with parameter 'news_site' to return
 * reports provided by a particular news site. This endpoint can also be queried with 'search' to search
 * for reports which match your search parameter.
 *
 * Also supports page, limit, offset and sort options.
 *
 * @apiExample Search for reports
 * https://spaceflightnewsapi.net/api/v1/reports?search=iss
 *
 * @apiExample Search for reports published by NASA
 * https://spaceflightnewsapi.net/api/v1/reports?news_site=nasa
 *
 * @apiParam {String} title Title of the report.
 * @apiParam {String} news_site News site that published the report.
 * @apiParam {String} news_site_long Unformatted name of the news site that published the report.
 * @apiParam {String} url URL of the report.
 * @apiParam {Number} _id ID generated by SNAPI.
 * @apiParam {Number} date_published Date when news site added the report
 * @apiParam {Number} date_added Date when report was added to SNAPI
 *
 * @apiSuccess {String} title Title of the report.
 * @apiSuccess {String} news_site News site that published the report.
 * @apiSuccess {String} news_site_long Unformatted name of the news site that published the report.
 * @apiSuccess {String} url URL of the report.
 * @apiSuccess {Number} _id ID generated by SNAPI.
 * @apiSuccess {Number} date_published Date when news site added the report.
 * @apiSuccess {Number} date_added Date when report was added to SNAPI.
 *
 * @apiSuccessExample Success-Response:
 * HTTP/1.1 200 OK
 * {
 *   "docs": [
 *     {
 *
 *     }
 *   ],
 *   "totalDocs": 719,
 *   "limit": 10,
 *   "hasPrevPage": false,
 *   "hasNextPage": true,
 *   "page": 1,
 *   "totalPages": 72,
 *   "prevPage": null,
 *   "nextPage": 2
 * }
 *
 *
 * @apiErrorExample Error-Response:
 *     HTTP/1.1 400 Bad request
 *     {
 *       "message": "Uh-oh, something went wrong. Please try again!"
 *     }
 */
router.get('/', ReportController.getReports);

module.exports = router;
